from aiogram import Bot
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from database import get_users_with_expiring_subscription


async def check_expiring_subscriptions(bot: Bot):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."""
    try:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –æ—Å—Ç–∞–ª–æ—Å—å 3 –¥–Ω—è
        users_3_days = await get_users_with_expiring_subscription(days_left=3)
        for user in users_3_days:
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üìà –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É", callback_data="start_analysis")]
            ])
            await bot.send_message(
                user.id,
                "–£ —Ç–µ–±—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞. –•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É –∑–∞ –º–µ—Å—è—Ü?",
                reply_markup=keyboard
            )

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –æ—Å—Ç–∞–ª—Å—è 1 –¥–µ–Ω—å
        users_1_day = await get_users_with_expiring_subscription(days_left=1)
        for user in users_1_day:
            await bot.send_message(
                user.id,
                "–¢—ã –±–ª–∏–∑–æ–∫ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä—ç–π—Ç—É. –≠—Ç–æ –Ω–µ –∫–æ–Ω–µ—Ü –¥–ª—è —Ç–µ–±—è."
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–æ–∫: {e}") # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏


def setup_scheduler(bot: Bot):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á."""
    scheduler = AsyncIOScheduler(timezone="Europe/Moscow") # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    # –ó–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12:00 –ø–æ –ú–æ—Å–∫–≤–µ
    scheduler.add_job(check_expiring_subscriptions, 'cron', hour=12, minute=0, args=[bot])
    return scheduler
